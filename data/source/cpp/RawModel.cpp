//モデルデータ保存
//

#include "../header/graphics.h"
////////////////////////////////////////////////////////////////
//　ベクトル3fからなるオブジェクト用のベクトル
////////////////////////////////////////////////////////////////
class OBJVEC3 : Vector3f
{
public:
  OBJVEC3(float nx = 0.0f, float ny = 0.0f, float nz = 0.0f);
  operator float *();
  operator const float() const;
};

////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
//　ベクトル2fからなるオブジェクト用のベクトル
////////////////////////////////////////////////////////////////
class OBJVEC2 : Vector2f
{
public:
  OBJVEC2(float nx = 0.0f, float ny = 0.0f);
  operator float *();
  operator const float() const;
};

////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
//　頂点情報
////////////////////////////////////////////////////////////////
class OBJVERTEX
{
public:
  OBJVEC3 normal;
  OBJVEC3 position;
  OBJVEC2 texcoord;
  OBJVERTEX() {}
};
////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
//　サブセット情報
////////////////////////////////////////////////////////////////
class OBJSUBSET
{
public:
  unsigned int materialIndex;
  unsigned int faceStart;
  unsigned int faceCount;
  OBJSUBSET() {}
};
////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
//　メッシュ情報
////////////////////////////////////////////////////////////////
class OBJMESH
{
private:
  std::vector<OBJVEC3> positions;
  std::vector<OBJVEC3> normals;
  std::vector<OBJVEC3> texcoords;
  std::vector<OBJVERTEX> t_vertices;
  std::vector<OBJSUBSET> t_subsets;

  std::vector<unsigned int> t_indices;

  bool LoadMTLFile(const char *filename);
  bool LoadOBJFile(const char *filename);

public:
  bool LoadFile(const char *filename);
  void Release();
  void Draw();
};
////////////////////////////////////////////////////////////////
