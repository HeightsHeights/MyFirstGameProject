#pragma once
#include "../header/vector.h"

#include <stdio.h>
#include <vector>

#define GL_GLEXT_PROTOTYPES 1

#include <SDL2/SDL.h>
#include <SDL2/SDL_opengl.h>
#include <SDL2/SDL_opengles2.h>

#include <GL/gl.h>
#include <GL/glut.h>

////////////////////////////////////////////////////////////////
//　ベクトル3fからなるオブジェクト用のベクトル
////////////////////////////////////////////////////////////////
class OBJVEC3 : public Vector3f {
public:
    OBJVEC3();
    OBJVEC3(Vector3f v);
    OBJVEC3(float nx, float ny, float nz);

    operator float *();
    operator const float() const;
};

////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
//　ベクトル2fからなるオブジェクト用のベクトル
////////////////////////////////////////////////////////////////
class OBJVEC2 : public Vector2f {
public:
    OBJVEC2();
    OBJVEC2(float nx, float ny);
    operator float *();
    operator const float() const;
};
////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
//　色情報　現状使用なし
////////////////////////////////////////////////////////////////
class OBJCOLOR {
public:
    GLubyte r;
    GLubyte g;
    GLubyte b;

    OBJCOLOR();
    OBJCOLOR(GLubyte cr, GLubyte cg, GLubyte cb);
};
////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
//　頂点情報
////////////////////////////////////////////////////////////////
class OBJVERTEX {
public:
    OBJVEC3 position;
    OBJVEC3 normal;
    OBJVEC3 color;
    OBJVEC2 texcoord;

    OBJVERTEX() {}
};
////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
//　サブセット情報 現状使用なし
////////////////////////////////////////////////////////////////
class OBJSUBSET {
public:
    unsigned int materialIndex;
    unsigned int faceStart;
    unsigned int faceCount;
    OBJSUBSET() {}
};
////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
//  オブジェクト郡？
////////////////////////////////////////////////////////////////
class INFOMATION {
private:
public:
    std::vector<OBJVEC3> POSITIONS;
    std::vector<OBJVEC3> NORMALS;
    std::vector<OBJVEC3> COLORS;
};
////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////
//　メッシュ情報
////////////////////////////////////////////////////////////////
class OBJMESH {
private:
    GLuint Vertex_Array_Object;
    GLuint Vertex_Buffer_Object;
    GLuint Index_Buffer;
    GLuint Normal_Buffer_Object;

    unsigned int number_of_position;

    bool LoadMTLFile(const char *filename);
    bool LoadOBJFile(const char *filename);

public:
    bool LoadFile(const char *filename);
    void Copy(OBJMESH model);
    void Release();
    void Draw();
};
////////////////////////////////////////////////////////////////
